<script src="https://cdn.firebase.com/v0/firebase.js"></script>

<!-- Download from https://github.com/firebase/Firechat -->
<link rel="stylesheet" href="/firechat/firechat-default.css" />
<script src="/firechat/firechat-default.js"></script>

<!-- Firechat content area. -->
<div id="firechat-wrapper"></div>

<script type='text/javascript'>

  var userIdPrefix = "<%= gen_user_id_prefix %>";

/*
 * isValidChatUserId enforces the rules for valid characters in a chat userId.  This
 * is typically an integer but can be any UUID sans the following characters:
    . (period)
    $ (dollar sign)
    [ (left square bracket)
    ] (right square bracket)
    # (hash or pound sign)
    / (forward slash)
 *
 * This is a helper function for validation purposes.
 */
function isValidChatUserId(userId) {
  if (userId.indexOf(".") >= 0 || userId.indexOf("$") >= 0 || userId.indexOf("[") >= 0
   || userId.indexOf("]") >= 0 || userId.indexOf("#") >= 0 || userId.indexOf("/") >= 0) {
    return false;
  } else {
    return true;
  }
}


/**
 * startFirechat is invoked by the click handler to start a chat between this user and
 * the specified user identified by userToChat
 */
function startFirechat(userToChat) {
  chat.startChat(userToChat);
}

/**
 * friendStateChangeCallback is invoked when the state of a friend being monitored
 * changes.  See the invocation of the addFriendsToWatch method invocation below.
 *
 * friendId - the userId of the friend being monitored
 *
 * friendUsername - the display name version of the friend being monitored.
 *
 * online - a boolean indicating the friend is online (true) or offline (false)
 */
var friendStateChangeCallback = function(friendId, friendUsername, online) {
//    console.log("Top level friend status callback: FriendID: " + friendId + "  FriendUserName: " + friendUsername + "  Is Online? " + online);

  //online-friends
  if ($("#online-friends").length > 0) {
    if ($("#"+friendId+"-online").length > 0) {
      $("#online-friend-"+friendId).text(friendUsername + " - " + (online ? "ONLINE":"OFFLINE"));
    } else {
      $("#online-friends").append("<li id='"+friendId+"-online'><a href='#'><span id='online-friend-" + friendId + "'>" + friendUsername + " - " + (online ? "ONLINE":"OFFLINE") + "</span></a></li>");
    }
  } else {
//      alert("online-friends DOES NOT EXIST");
  }
};

  //
  // Runtime code.
  //

  var friendsToWatch = {};
  // Build up the 'friends to watch' list.  This is generated server side.  It is a 
  // simplification using ALL registered users.  This would not typically use ALL users.
  // It could be a complete friend list, some list subset based on user interactions,
  // etc.
<%
   users = User.all;
   count = 0
   users.each do |user|
     count += 1
     if (count < 106 && (user.id != current_user.id))
%>
    friendsToWatch["<%= make_chat_user_id(user) %>"] = "<%= user.name %>";
<%   end %>
<% end -%>


  var chatRef = new Firebase('https://firechattest.firebaseio.com/chat');
  var chat = undefined;

  // Setup the auth for this user.  The @myFirebaseToken is generated in the server code
  // with the firebase secret and the user data.
  // See README for details on how to generate the @myFirebaseToken.
  chatRef.auth("<%= @myFirebaseToken %>", function(error) {
    if(error) {
      console.log("Login Failed!", error);
    } else {
      console.log("Login Succeeded!");
    }
  });

  $( document ).ready(function() {
    chat = new FirechatUI(chatRef, document.getElementById("firechat-wrapper"));

    // Populate the list of friends to watch
    for (friendId in friendsToWatch) {
      if ($("#online-friends").length > 0) {
        $("#online-friends").append("<li id='"+friendId+"-online'><a href='#'><span id='online-friend-" + friendId + "' uid='" + friendId + "'>" + friendsToWatch[friendId] + " -  ???" + "</span></a></li>");

        // Setup the click handler to initiate a chat
        $("#online-friend-" + friendId).click(function(event) {
          event.preventDefault();
          startFirechat($(this).attr("uid"));
        });
      }
    }
    chat.addFriendsToWatch(friendsToWatch, friendStateChangeCallback);

    chat.setUser('<%= make_chat_user_id(current_user) %>', '<%= current_user.name %>');
  });

</script>
